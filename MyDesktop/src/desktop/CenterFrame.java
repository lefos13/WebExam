/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package desktop;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.json.Json;
import javax.json.JsonArrayBuilder;
import javax.json.JsonBuilderFactory;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Lefos
 */
public class CenterFrame extends javax.swing.JFrame {

    /**
     * Creates new form CenterFrame
     */
    public CenterFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        getexamsbut = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        procbut = new javax.swing.JButton();
        examsbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        getexamsbut2 = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        addUserToAnExamBut = new javax.swing.JButton();
        examscbox = new javax.swing.JComboBox<>();
        useridtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        reports = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        resultsexamid = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        examidtxt = new javax.swing.JTextField();
        resexamidbut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        resultsexamc = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel13 = new javax.swing.JLabel();
        examcenters = new javax.swing.JComboBox<>();
        getecbut = new javax.swing.JButton();
        showdatesbut = new javax.swing.JButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        resecbut = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        dates = new javax.swing.JComboBox<>();
        resultsalexams = new javax.swing.JPanel();
        showallbut = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        resultsexaminee = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        usernametxt = new javax.swing.JTextField();
        examineebut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        getexamsbut.setBackground(new java.awt.Color(102, 255, 102));
        getexamsbut.setText("Click me first");
        getexamsbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getexamsbutActionPerformed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));

        procbut.setText("Submit");
        procbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procbutActionPerformed(evt);
            }
        });

        examsbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examsboxActionPerformed(evt);
            }
        });

        jLabel1.setText("Exams");

        jLayeredPane1.setLayer(procbut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(examsbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(procbut)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(examsbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(examsbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(procbut)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(getexamsbut)))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(getexamsbut)
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Start Exam Procedure", jPanel1);

        getexamsbut2.setBackground(new java.awt.Color(51, 255, 51));
        getexamsbut2.setText("Click me First");
        getexamsbut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getexamsbut2ActionPerformed(evt);
            }
        });

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));

        jLabel3.setText("Exams");

        addUserToAnExamBut.setText("Submit");
        addUserToAnExamBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserToAnExamButActionPerformed(evt);
            }
        });

        jLabel2.setText("User id");

        jLayeredPane4.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(addUserToAnExamBut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(examscbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(useridtxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addUserToAnExamBut)
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(37, 37, 37)
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(examscbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(useridtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(useridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(examscbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(addUserToAnExamBut)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(getexamsbut2)))
                .addContainerGap(233, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(getexamsbut2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add user to an exam", jPanel2);

        jLabel12.setText("Exam id");

        resexamidbut.setText("Submit");
        resexamidbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resexamidbutActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Question Id", "Answer", "True Answer", "Time", "Exam Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout resultsexamidLayout = new javax.swing.GroupLayout(resultsexamid);
        resultsexamid.setLayout(resultsexamidLayout);
        resultsexamidLayout.setHorizontalGroup(
            resultsexamidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addGroup(resultsexamidLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addGroup(resultsexamidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resexamidbut)
                    .addGroup(resultsexamidLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(26, 26, 26)
                        .addComponent(examidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        resultsexamidLayout.setVerticalGroup(
            resultsexamidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsexamidLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(resultsexamidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(examidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resexamidbut)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(696, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Results based on exam id", resultsexamid);

        resultsexamc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                resultsexamcFocusGained(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Question Id", "Answer", "True Answer", "Time", "Exam Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table1);

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));
        jLayeredPane2.setToolTipText("1");

        jLabel13.setText("Exam Center");

        getecbut.setBackground(new java.awt.Color(102, 255, 51));
        getecbut.setText("Get Exam Centers");
        getecbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getecbutActionPerformed(evt);
            }
        });

        showdatesbut.setText("Show Dates");
        showdatesbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showdatesbutActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(examcenters, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(getecbut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(showdatesbut, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(getecbut))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examcenters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showdatesbut))
                .addContainerGap())
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(examcenters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getecbut)
                    .addComponent(showdatesbut))
                .addContainerGap())
        );

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.gray, null, null));

        resecbut.setText("Submit");
        resecbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resecbutActionPerformed(evt);
            }
        });

        jLabel14.setText("Dates");

        jLayeredPane3.setLayer(resecbut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(dates, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(50, 50, 50)
                        .addComponent(dates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resecbut))
                .addContainerGap())
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(dates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resecbut)
                .addContainerGap())
        );

        javax.swing.GroupLayout resultsexamcLayout = new javax.swing.GroupLayout(resultsexamc);
        resultsexamc.setLayout(resultsexamcLayout);
        resultsexamcLayout.setHorizontalGroup(
            resultsexamcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsexamcLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
        resultsexamcLayout.setVerticalGroup(
            resultsexamcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsexamcLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(resultsexamcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(606, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Results based on exam center", resultsexamc);

        showallbut.setText("Show all");
        showallbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showallbutActionPerformed(evt);
            }
        });

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Question Id", "Answer", "True Answer", "Time", "Exam Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table2);

        javax.swing.GroupLayout resultsalexamsLayout = new javax.swing.GroupLayout(resultsalexams);
        resultsalexams.setLayout(resultsalexamsLayout);
        resultsalexamsLayout.setHorizontalGroup(
            resultsalexamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsalexamsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsalexamsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(showallbut)
                .addGap(227, 227, 227))
        );
        resultsalexamsLayout.setVerticalGroup(
            resultsalexamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsalexamsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(showallbut)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(696, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Results of all exams", resultsalexams);

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Question Id", "Answer", "True Answer", "Time", "Exam Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(table3);

        jLabel15.setText("Username");

        examineebut.setText("Show");
        examineebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examineebutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resultsexamineeLayout = new javax.swing.GroupLayout(resultsexaminee);
        resultsexaminee.setLayout(resultsexamineeLayout);
        resultsexamineeLayout.setHorizontalGroup(
            resultsexamineeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsexamineeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsexamineeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(resultsexamineeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examineebut)
                    .addGroup(resultsexamineeLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(26, 26, 26)
                        .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(177, 177, 177))
        );
        resultsexamineeLayout.setVerticalGroup(
            resultsexamineeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsexamineeLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(resultsexamineeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(usernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(examineebut)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(713, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Results of an examinee", resultsexaminee);

        javax.swing.GroupLayout reportsLayout = new javax.swing.GroupLayout(reports);
        reports.setLayout(reportsLayout);
        reportsLayout.setHorizontalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        reportsLayout.setVerticalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsLayout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reports", reports);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(582, 478));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void examineebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examineebutActionPerformed
        try {
            String user=usernametxt.getText();
            JsonBuilderFactory factory = Json.createBuilderFactory(null);
            JsonArrayBuilder jsonA = factory.createArrayBuilder();
            jsonA = jsonA.add(factory.createObjectBuilder()
                .add("username",user)
            );
            String test=jsonA.build().toString();
            test=test.replace("{", "%7B");
            test=test.replace("}", "%7D");
            URL oracle = new URL("http://localhost:8080/service/webresources/reports/ru/"+test);
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }
            JSONArray arr = new JSONArray(total);
            String username=null,idq=null,answer=null,trueanswer=null,time=null,examid=null;
            DefaultTableModel dtm = new DefaultTableModel(0, 0);
            String header[] = new String[] { "Username", "Question ID", "Answer",
                "True Answer", "Time", "Exam Id" };
            dtm.setColumnIdentifiers(header);
            table3.setModel(dtm);
            for (int i = 0; i < arr.length(); i++)
            { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                username=obj.getString("username");
                idq=obj.getString("idq");
                answer=obj.getString("answer");
                trueanswer=obj.getString("trueanswer");
                time=obj.getString("time");
                examid=obj.getString("examid");
                dtm.addRow(new Object[] { username, idq, answer,
                    trueanswer, time, examid });
        }

        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_examineebutActionPerformed

    private void showallbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showallbutActionPerformed
        try {
            URL oracle = new URL("http://localhost:8080/service/webresources/reports/allres");
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }
            JSONArray arr = new JSONArray(total);

            String username=null,idq=null,answer=null,trueanswer=null,time=null,examid=null;
            DefaultTableModel dtm = new DefaultTableModel(0, 0);
            String header[] = new String[] { "Username", "Question ID", "Answer",
                "True Answer", "Time", "Exam Id" };
            dtm.setColumnIdentifiers(header);
            table2.setModel(dtm);
            for (int i = 0; i < arr.length(); i++)
            { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                username=obj.getString("username");
                idq=obj.getString("idq");
                answer=obj.getString("answer");
                trueanswer=obj.getString("trueanswer");
                time=obj.getString("time");
                examid=obj.getString("examid");
                dtm.addRow(new Object[] { username, idq, answer,
                    trueanswer, time, examid });
        }
        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showallbutActionPerformed

    private void resultsexamcFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_resultsexamcFocusGained

    }//GEN-LAST:event_resultsexamcFocusGained

    private void resecbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resecbutActionPerformed
        if(dates.getItemCount()!=0)
        {
            try {
                String info = (String)dates.getSelectedItem();
                String[] data= info.split(":");
                String testid= data[0];

                JsonBuilderFactory factory = Json.createBuilderFactory(null);
                JsonArrayBuilder jsonA = factory.createArrayBuilder();

                jsonA = jsonA.add(factory.createObjectBuilder()
                    .add("testid",testid)
                );

                String test=jsonA.build().toString();
                test=test.replace("{", "%7B");
                test=test.replace("}", "%7D");
                URL oracle = new URL("http://localhost:8080/service/webresources/reports/finalec/"+test);
                BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
                String result,total="";
                while ((result = in.readLine()) != null)
                {
                    total+=result;
                }

                JSONArray arr = new JSONArray(total);
                String username=null,idq=null,answer=null,trueanswer=null,time=null;
                DefaultTableModel dtm = new DefaultTableModel(0, 0);
                String header[] = new String[] { "Username", "Question ID", "Answer",
                    "True Answer", "Time", "Exam Id" };
                dtm.setColumnIdentifiers(header);
                table1.setModel(dtm);

                for (int i = 0; i < arr.length(); i++)
                { // Walk through the Array.

                    JSONObject obj = arr.getJSONObject(i);
                    username=obj.getString("username");
                    idq=obj.getString("idq");
                    answer=obj.getString("answer");
                    trueanswer=obj.getString("trueanswer");
                    time=obj.getString("time");
                    dtm.addRow(new Object[] { username, idq, answer,
                        trueanswer, time, testid });

            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_resecbutActionPerformed

    private void showdatesbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showdatesbutActionPerformed
        try {
            if(examcenters.getItemCount()!=0)
            {
                dates.removeAllItems();
                String info=(String)examcenters.getSelectedItem();
                String[] data= info.split(":");
                String cid=data[0];
                JsonBuilderFactory factory = Json.createBuilderFactory(null);
                JsonArrayBuilder jsonA = factory.createArrayBuilder();
                jsonA = jsonA.add(factory.createObjectBuilder()
                    .add("cid",cid)
                );  String test=jsonA.build().toString();
                test=test.replace("{", "%7B");
                test=test.replace("}", "%7D");
                URL oracle = new URL("http://localhost:8080/service/webresources/reports/getdates/"+test);
                BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
                String result,total="";
                while ((result = in.readLine()) != null)
                {
                    total+=result;
                }

                JSONArray arr = new JSONArray(total);
                for (int i = 0; i < arr.length(); i++)
                { // Walk through the Array.

                    JSONObject obj = arr.getJSONObject(i);
                    String item=obj.getString("id")+":"+" "+ ":" + obj.getString("date");
                    dates.addItem(item);

                }
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showdatesbutActionPerformed

    private void getecbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getecbutActionPerformed
        try {
            examcenters.removeAllItems();
            URL oracle = new URL("http://localhost:8080/service/webresources/reports/getec");
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }

            JSONArray arr = new JSONArray(total);
            for (int i = 0; i < arr.length(); i++)
            { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                String item= obj.getString("id") + ":" + obj.getString("name");
                examcenters.addItem(item);

            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getecbutActionPerformed

    private void resexamidbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resexamidbutActionPerformed
        try {
            String examid = examidtxt.getText();
            JsonBuilderFactory factory = Json.createBuilderFactory(null);
            JsonArrayBuilder jsonA = factory.createArrayBuilder();
            jsonA = jsonA.add(factory.createObjectBuilder()
                .add("exam_id",examid)
            );
            String test=jsonA.build().toString();
            test=test.replace("{", "%7B");
            test=test.replace("}", "%7D");
            URL oracle = new URL("http://localhost:8080/service/webresources/reports/rae/"+test);
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }
            String username=null,idq=null,answer=null,trueanswer=null,time=null;
            JSONArray arr = new JSONArray(total);

            DefaultTableModel dtm = new DefaultTableModel(0, 0);
            String header[] = new String[] { "Username", "Question ID", "Answer",
                "True Answer", "Time", "Exam Id" };
            dtm.setColumnIdentifiers(header);
            table.setModel(dtm);

            for (int i = 0; i < arr.length(); i++)
            { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                username=obj.getString("username");
                idq=obj.getString("idq");
                answer=obj.getString("answer");
                trueanswer=obj.getString("trueanswer");
                time=obj.getString("time");
                dtm.addRow(new Object[] { username, idq, answer,
                    trueanswer, time, examid });

        }
        } catch (MalformedURLException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(SystemFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_resexamidbutActionPerformed

    private void examsboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examsboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_examsboxActionPerformed

    private void procbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procbutActionPerformed
        if (examsbox.getItemCount()!=0)
        {
            try {
                String item=(String)examsbox.getSelectedItem();
                String[] data= item.split(":");
                String idexam=data[0];
                String redirectURL = "http://localhost:8080/service/webresources/tryto/startex/"+idexam;
                URL oracle = new URL(redirectURL);
                BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
                String result,total="";
                while ((result = in.readLine()) != null)
                {
                    total+=result;
                }          JSONArray arr = new JSONArray(total);
                String flag="0";
                for (int i = 0; i < arr.length(); i++)
                { // Walk through the Array.
                    JSONObject obj = arr.getJSONObject(i);
                    flag = obj.getString("flag");
                }
                System.out.println(flag);
            } catch (MalformedURLException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JSONException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_procbutActionPerformed

    private void getexamsbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getexamsbutActionPerformed
        try {
            examsbox.removeAllItems();
            String uid=GlobalVar.uid;
            JsonBuilderFactory factory = Json.createBuilderFactory(null);
            JsonArrayBuilder jsonA = factory.createArrayBuilder();
            jsonA = jsonA.add(factory.createObjectBuilder()
                .add("uid",uid)
            );
            String test=jsonA.build().toString();
            test=test.replace("{", "%7B");
            test=test.replace("}", "%7D");
            URL oracle = new URL("http://localhost:8080/service/webresources/tryto/returnuc/"+test);
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }
            JSONArray arr = new JSONArray(total);
            for (int i = 0; i < arr.length(); i++)
            { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                String item= obj.getString("id")+":"+obj.getString("date");
                examsbox.addItem(item);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getexamsbutActionPerformed

    private void getexamsbut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getexamsbut2ActionPerformed
        try {
            examscbox.removeAllItems();
            JsonBuilderFactory factory = Json.createBuilderFactory(null);
            JsonArrayBuilder jsonA = factory.createArrayBuilder();
            String uid= GlobalVar.uid;
            jsonA = jsonA.add(factory.createObjectBuilder()
                    .add("uid",uid)
            );
            String test=jsonA.build().toString();
            test=test.replace("{", "%7B");
            test=test.replace("}", "%7D");
            URL oracle = new URL("http://localhost:8080/service/webresources/tryto/returnuc/"+test);
            BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
            String result,total="";
            while ((result = in.readLine()) != null)
            {
                total+=result;
            }
            JSONArray arr = new JSONArray(total);
             for (int i = 0; i < arr.length(); i++) 
             { // Walk through the Array.

                JSONObject obj = arr.getJSONObject(i);
                String item= obj.getString("id")+":"+obj.getString("date");
                examscbox.addItem(item);
             }     
        } catch (MalformedURLException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getexamsbut2ActionPerformed

    private void addUserToAnExamButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserToAnExamButActionPerformed
        if(examscbox.getItemCount()!=0)
        {
            try {
                String userid = useridtxt.getText();
                String info = (String)examscbox.getSelectedItem();
                String[] data= info.split(":");
                String examid = data[0];
                String redirectURL = "http://localhost:8080/service/webresources/tryto/addutoe/"+userid+"/"+examid;
                URL oracle = new URL(redirectURL);
                BufferedReader in = new BufferedReader( new InputStreamReader(oracle.openStream()));
                String result,total="";
                while ((result = in.readLine()) != null)
                {
                    total+=result;
                }          
                JSONArray arr = new JSONArray(total);
                String flag="0";
                for (int i = 0; i < arr.length(); i++)
                { // Walk through the Array.
                    JSONObject obj = arr.getJSONObject(i);
                    flag = obj.getString("flag");
                }          
                System.out.println(flag);
            } catch (MalformedURLException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JSONException ex) {
                Logger.getLogger(CenterFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addUserToAnExamButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CenterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CenterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CenterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CenterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CenterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserToAnExamBut;
    private javax.swing.JComboBox<String> dates;
    private javax.swing.JComboBox<String> examcenters;
    private javax.swing.JTextField examidtxt;
    private javax.swing.JButton examineebut;
    private javax.swing.JComboBox<String> examsbox;
    private javax.swing.JComboBox<String> examscbox;
    private javax.swing.JButton getecbut;
    private javax.swing.JButton getexamsbut;
    private javax.swing.JButton getexamsbut2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton procbut;
    private javax.swing.JPanel reports;
    private javax.swing.JButton resecbut;
    private javax.swing.JButton resexamidbut;
    private javax.swing.JPanel resultsalexams;
    private javax.swing.JPanel resultsexamc;
    private javax.swing.JPanel resultsexamid;
    private javax.swing.JPanel resultsexaminee;
    private javax.swing.JButton showallbut;
    private javax.swing.JButton showdatesbut;
    private javax.swing.JTable table;
    private javax.swing.JTable table1;
    private javax.swing.JTable table2;
    private javax.swing.JTable table3;
    private javax.swing.JTextField useridtxt;
    private javax.swing.JTextField usernametxt;
    // End of variables declaration//GEN-END:variables
}
